trigger:
- master

pr:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  appDir: TheHubUI

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'
  


- script: |
    npm install -g @angular/cli
    npm install
    ng build --prod
  displayName: 'npm install and build'
  workingDirectory: $(appDir)

- script: ng test
    --browsers ChromeHeadless
    --no-watch
    --code-coverage
  displayName: ng test
  workingDirectory: $(appDir)

# requires some extra work iirc
- script: npx ng e2e
  displayName: ng e2e
  workingDirectory: $(appDir)
  enabled: false

- script: ng lint
  displayName: ng lint
  workingDirectory: $(appDir)
- task: SonarCloudPrepare@1
  displayName: SonarCloud Prepare
  inputs:
    SonarCloud: 'Sonarcloud TheHub site'
    organization: '2006-jun15-net'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '2006-jun15-net_TheHub-site'
    cliProjectName: 'The Hub'
    cliSources: '$(appDir)/src,$(appDir)/e2e'
    extraProperties: |
      sonar.coverage.exclusions=**/*.spec.ts,$(appDir)/e2e/**/*
      sonar.typescript.lcov.reportPaths=$(appDir)/coverage/$(appDir)/lcov.info

- task: SonarCloudAnalyze@1
  displayName: SonarCloud Analyze

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
  displayName: SonarCloud publish

- task: AzureRmWebAppDeployment@4
  displayName: deploy to azure app service
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(a8f0024b-b40d-44a8-8a01-2d63b02fb4c7)'
    appType: 'webApp'
    WebAppName: 'TheHub-site'
    packageForLinux: '$(appDir)/dist/$(appDir)'

