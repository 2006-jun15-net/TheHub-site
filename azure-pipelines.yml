trigger:
- master

pr:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  appDir: TheHubUI

stages:
  - stage: build
    pool: 
      vmImage: 'ubuntu-latest'
    jobs:
      - job: build

        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'
          displayName: 'Install Node.js'

        - script: |
            npm install -g @angular/cli
            npm install
            ng build --prod
          displayName: 'npm install and build'
          workingDirectory: $(appDir)

        - publish: $(Build.ArtifactStagingDirectory)/app
          artifact: app
          displayName: artifact publish app

  - stage: analyze
    pool: 
      vmImage: 'ubuntu-latest'

      jobs:
      - job: analyze

        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'
          displayName: 'Install Node.js'

        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'Sonarcloud TheHub site'
            organization: '2006-jun15-net'
            scannerMode: 'CLI'
            configMode: 'manual'
            cliProjectKey: '2006-jun15-net_TheHub-site'
            cliProjectName: 'The Hub'
            cliSources: '$(appDir)/src'

        - script: |
            npm install -g @angular/cli
            npm install
            ng build --prod
          displayName: 'npm install and build'
          workingDirectory: $(appDir)

        - task: SonarCloudAnalyze@1

        - task: SonarCloudPublish@1
          inputs:
            pollingTimeoutSec: '300'

  - stage: deploy
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn:
    - build
    - analyze

    pool: 
      vmImage: 'ubuntu-latest'

      jobs:
      - deployment: deploy_dev

        environment: dev

        strategy:
          runOnce:
            deploy:
              steps:

              - download: current
                artifact: app
                displayName: artifact download app

            steps:
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'Azure subscription 1(a8f0024b-b40d-44a8-8a01-2d63b02fb4c7)'
                  appType: 'webApp'
                  WebAppName: 'TheHub-site'
                  packageForLinux: '$(appDir)/dist/$(appDir)'
